{"version":3,"sources":["redux/actions.js","redux/types.js","components/Alert.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader.js","components/FetchPosts.js","App.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["showAlert","text","dispatch","type","payload","setTimeout","Alert","className","role","PostForm","state","title","submitHandler","event","preventDefault","trim","props","newPost","id","Date","now","toString","createPost","setState","changeInputHandler","persist","prev","target","name","value","alert","this","onSubmit","htmlFor","onChange","Component","mapDispatchToProps","post","connect","app","syncPosts","posts","length","map","Post","key","Loader","class","useDispatch","useSelector","fetchedPosts","loading","onClick","App","FetchPosts","initialState","rootReducer","combineReducers","action","forbidden","sagaWatcher","sagaWorder","takeEvery","put","call","fetchPosts","a","fetch","responce","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c94759e7.chunk.js","sourcesContent":["import {\n  CREATE_POST,\n  FETCH_POST,\n  SHOW_LOADER,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  REQUEST_POSTS,\n} from \"./types\";\n\nexport function createPost(post) {\n  return {\n    type: CREATE_POST,\n    payload: post,\n  };\n}\n\nexport function fetchPosts() {\n  return {\n    type: REQUEST_POSTS,\n  };\n\n  /* return async (dispatch) => {\n    try {\n      dispatch(showLoader());\n      const responce = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts?_limit=7\"\n      );\n      const json = await responce.json();\n      dispatch({ type: FETCH_POST, payload: json });\n      dispatch(hideLoader());\n    } catch (e) {\n      dispatch(showAlert(\"Something went wrong!\"));\n      dispatch(hideLoader());\n    }\n  };*/\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  };\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  };\n}\n\nexport function showAlert(text) {\n  return (dispatch) => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text,\n    });\n\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 2000);\n  };\n}\n\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT,\n  };\n}\n","export const CREATE_POST = \"CREATE_POST\";\nexport const FETCH_POST = \"FETCH_POST\";\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const HIDE_LOADER = \"HIDE_LOADER\";\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\nexport const REQUEST_POSTS = \"REQUEST_POSTS\";\n","import React from \"react\";\n\nexport const Alert = ({ text }) => {\n  return (\n    <div className=\"alert alert-warning\" role=\"alert\">\n      {text}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { createPost, showAlert } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"./Alert\";\n\nclass PostForm extends Component {\n  state = {\n    title: \"\",\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n\n    if (!title.trim()) {\n      return this.props.showAlert(\"Empry post\");\n    }\n\n    const newPost = {\n      title,\n      id: Date.now().toString(),\n    };\n\n    this.props.createPost(newPost);\n    this.setState({ title: \"\" });\n  };\n\n  changeInputHandler = (event) => {\n    event.persist();\n    this.setState((prev) => ({\n      ...prev,\n      ...{\n        [event.target.name]: event.target.value,\n      },\n    }));\n  };\n\n  render() {\n    const { alert } = this.props;\n\n    return (\n      <form onSubmit={this.submitHandler}>\n        {alert && <Alert text={alert} />}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Post title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            value={this.state.title}\n            name=\"title\"\n            onChange={this.changeInputHandler}\n          />\n        </div>\n        <button className=\"btn btn-success\" type=\"submit\">\n          Create\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createPost,\n  showAlert,\n};\n\nconst mapStateToProps = (state) => ({\n  alert: state.app.alert,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\n","import React from \"react\";\n\nexport default ({ post }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{post.title}</h5>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post\";\n\nconst Posts = ({ syncPosts }) => {\n  if (!syncPosts.length) {\n    return <h4>No posts yet!</h4>;\n  }\n\n  return syncPosts.map((post) => <Post post={post} key={post.id} />);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    syncPosts: state.posts.posts,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Posts);\n","import React from \"react\";\n\nexport const Loader = () => {\n  return (\n    <div class=\"spinner-border text-primary\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Post from \"./Post\";\nimport { fetchPosts } from \"../redux/actions\";\nimport { Loader } from \"./Loader\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts.fetchedPosts);\n  const loading = useSelector((state) => state.app.loading);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!posts.length) {\n    return (\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => dispatch(fetchPosts())}\n      >\n        Download\n      </button>\n    );\n  }\n\n  return posts.map((post) => <Post post={post} key={post.id} />);\n};\n","import React from \"react\";\nimport PostForm from \"./components/PostForm\";\nimport Posts from \"./components/Posts\";\nimport FetchPosts from \"./components/FetchPosts\";\n\nconst App = () => {\n  return (\n    <div className=\"container pt-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <PostForm />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Sync Posts</h2>\n          <Posts />\n        </div>\n        <div className=\"col\">\n          <h2>Async Posts</h2>\n          <FetchPosts />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { CREATE_POST, FETCH_POST } from \"./types\";\n\nconst initialState = {\n  posts: [],\n  fetchedPosts: [],\n};\n\nexport const PostsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case FETCH_POST:\n      return { ...state, fetchedPosts: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT } from \"./types\";\n\nconst initialState = {\n  loading: false,\n  alert: null,\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true };\n    case HIDE_LOADER:\n      return { ...state, loading: false };\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload };\n    case HIDE_ALERT:\n      return { ...state, alert: null };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { PostsReducer } from \"./postsReducer\";\nimport { appReducer } from \"./appReducer\";\n\nexport const rootReducer = combineReducers({\n  posts: PostsReducer,\n  app: appReducer,\n});\n","import { CREATE_POST } from \"./types\";\nimport { showAlert } from \"./actions\";\n\nconst forbidden = [\"fuck\", \"spam\", \"php\"];\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n  return function (next) {\n    return function (action) {\n      if (action.type === CREATE_POST) {\n        const found = forbidden.filter((w) => action.payload.title.includes(w));\n        if (found.length) {\n          return dispatch(showAlert(\"No spam here!\"));\n        }\n      }\n      return next(action);\n    };\n  };\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\nimport { REQUEST_POSTS, FETCH_POST } from \"./types\";\nimport { showLoader, hideLoader, showAlert } from \"./actions\";\n\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_POSTS, sagaWorder);\n}\n\nfunction* sagaWorder() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchPosts);\n    yield put({ type: FETCH_POST, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    yield put(showAlert(\"Something went wrong\"));\n    yield put(hideLoader());\n  }\n}\n\nasync function fetchPosts() {\n  const responce = await fetch(\n    \"https://jsonplaceholder.typicode.com/posts?_limit=7\"\n  );\n  return await responce.json();\n}\n","import React from \"react\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { forbiddenWordsMiddleware } from \"./redux/middleware\";\nimport { sagaWatcher } from \"./redux/sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, forbiddenWordsMiddleware, saga),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nsaga.run(sagaWatcher);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}